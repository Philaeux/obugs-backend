"""empty message

Revision ID: 180ce9c59387
Revises: 
Create Date: 2023-09-26 00:47:22.530741

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '180ce9c59387'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('software',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('editor', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('is_activated', sa.Boolean(), nullable=False),
    sa.Column('activation_token', sa.String(length=32), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('is_banned', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('entry',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('software_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('illustration', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('NEW', 'CONFIRMED', 'WIP', 'CHECK', 'FIXED', 'EXPECTED', 'DUPLICATE', 'CLOSED', name='entrystatus'), nullable=False),
    sa.Column('rating_total', sa.BigInteger(), nullable=False),
    sa.Column('rating_count', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['software_id'], ['software.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tag',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('software_id', sa.String(), nullable=False),
    sa.Column('font_color', sa.String(), nullable=False),
    sa.Column('background_color', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['software_id'], ['software.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vote',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('subject_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('association_tags_entries',
    sa.Column('tag_id', sa.Uuid(), nullable=False),
    sa.Column('entry_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['entry_id'], ['entry.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('tag_id', 'entry_id')
    )
    op.create_table('entry_message',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('entry_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('state_after', sa.String(), nullable=True),
    sa.Column('comment', sa.String(), nullable=True),
    sa.Column('state_before', sa.String(), nullable=True),
    sa.Column('rating_total', sa.BigInteger(), nullable=True),
    sa.Column('rating_count', sa.BigInteger(), nullable=True),
    sa.Column('is_closed', sa.Boolean(), nullable=True),
    sa.Column('closed_by_id', sa.Uuid(), nullable=True),
    sa.Column('closed_at', sa.DateTime(), nullable=True),
    sa.Column('accepted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['closed_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['entry_id'], ['entry.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('entry_message')
    op.drop_table('association_tags_entries')
    op.drop_table('vote')
    op.drop_table('tag')
    op.drop_table('entry')
    op.drop_table('user')
    op.drop_table('software')
    # ### end Alembic commands ###
