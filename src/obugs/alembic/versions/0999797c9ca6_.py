"""empty message

Revision ID: 0999797c9ca6
Revises: f4402ea7d8f8
Create Date: 2023-10-23 16:14:34.909711

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0999797c9ca6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('software',
                    sa.Column('id', sa.String(), nullable=False),
                    sa.Column('full_name', sa.String(), nullable=False),
                    sa.Column('editor', sa.String(), nullable=False),
                    sa.Column('description', sa.String(), nullable=False),
                    sa.Column('language', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_software_id'), 'software', ['id'], unique=False)
    op.create_table('user',
                    sa.Column('id', sa.Uuid(), nullable=False),
                    sa.Column('username', sa.String(), nullable=False),
                    sa.Column('is_admin', sa.Boolean(), nullable=False),
                    sa.Column('is_banned', sa.Boolean(), nullable=False),
                    sa.Column('github_id', sa.Integer(), nullable=True),
                    sa.Column('github_name', sa.String(), nullable=True),
                    sa.Column('reddit_id', sa.String(), nullable=True),
                    sa.Column('reddit_name', sa.String(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_index(op.f('ix_user_github_id'), 'user', ['github_id'], unique=False)
    op.create_index(op.f('ix_user_reddit_id'), 'user', ['reddit_id'], unique=False)
    op.create_table('entry',
                    sa.Column('id', sa.Uuid(), nullable=False),
                    sa.Column('software_id', sa.String(), nullable=False),
                    sa.Column('title', sa.String(), nullable=False),
                    sa.Column('description', sa.Text(), nullable=False),
                    sa.Column('illustration', sa.Text(), nullable=False),
                    sa.Column('status', sa.Enum('NEW', 'CONFIRMED', 'WIP', 'CHECK', 'FIXED', 'EXPECTED', 'DUPLICATE', 'CLOSED', name='entrystatus'), nullable=False),
                    sa.Column('rating_total', sa.BigInteger(), nullable=False),
                    sa.Column('rating_count', sa.BigInteger(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.Column('open_patches_count', sa.Integer(), nullable=False),
                    sa.Column('rating', sa.Float(), nullable=False),
                    sa.ForeignKeyConstraint(['software_id'], ['software.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_entry_id'), 'entry', ['id'], unique=False)
    op.create_index('idx_entry_software_and_update_at', 'entry', ['software_id', sa.text('updated_at DESC')], unique=False)
    op.create_index('idx_entry_software_and_title', 'entry', ['software_id', 'title'], unique=False)
    op.create_table('tag',
                    sa.Column('id', sa.Uuid(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('software_id', sa.String(), nullable=False),
                    sa.Column('font_color', sa.String(), nullable=False),
                    sa.Column('background_color', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(['software_id'], ['software.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_tag_software_id'), 'tag', ['software_id'], unique=False)
    op.create_index('idx_tag_software_id_name', 'tag', ['software_id', 'name'], unique=False)
    op.create_table('user_software_role',
                    sa.Column('user_id', sa.Uuid(), nullable=False),
                    sa.Column('software_id', sa.String(), nullable=False),
                    sa.Column('role', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['software_id'], ['software.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('user_id', 'software_id')
                    )
    op.create_table('vote',
                    sa.Column('id', sa.Uuid(), nullable=False),
                    sa.Column('subject_id', sa.Uuid(), nullable=False),
                    sa.Column('user_id', sa.Uuid(), nullable=False),
                    sa.Column('rating', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index('idx_vote_user_subject', 'vote', ['user_id', 'subject_id'], unique=False)
    op.create_table('association_tags_entries',
                    sa.Column('tag_id', sa.Uuid(), nullable=False),
                    sa.Column('entry_id', sa.Uuid(), nullable=False),
                    sa.ForeignKeyConstraint(['entry_id'], ['entry.id'], ),
                    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
                    sa.PrimaryKeyConstraint('tag_id', 'entry_id')
                    )
    op.create_table('entry_message',
                    sa.Column('id', sa.Uuid(), nullable=False),
                    sa.Column('entry_id', sa.Uuid(), nullable=False),
                    sa.Column('user_id', sa.Uuid(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('type', sa.String(), nullable=False),
                    sa.Column('state_after', sa.String(), nullable=True),
                    sa.Column('comment', sa.String(), nullable=True),
                    sa.Column('state_before', sa.String(), nullable=True),
                    sa.Column('rating_total', sa.BigInteger(), nullable=True),
                    sa.Column('rating_count', sa.BigInteger(), nullable=True),
                    sa.Column('is_closed', sa.Boolean(), nullable=True),
                    sa.Column('closed_by_id', sa.Uuid(), nullable=True),
                    sa.Column('closed_at', sa.DateTime(), nullable=True),
                    sa.Column('accepted', sa.Boolean(), nullable=True),
                    sa.ForeignKeyConstraint(['closed_by_id'], ['user.id'], ),
                    sa.ForeignKeyConstraint(['entry_id'], ['entry.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index('idx_entry_message_entry_created_at', 'entry_message', ['entry_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_entry_message_id'), 'entry_message', ['id'], unique=False)
    op.create_table('software_suggestion',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('description', sa.Text(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('software_suggestion')
    op.drop_index(op.f('ix_entry_message_id'), table_name='entry_message')
    op.drop_index('idx_entry_message_entry_created_at', table_name='entry_message')
    op.drop_table('entry_message')
    op.drop_table('association_tags_entries')
    op.drop_index('idx_vote_user_subject', table_name='vote')
    op.drop_table('vote')
    op.drop_table('user_software_role')
    op.drop_index('idx_tag_software_id_name', table_name='tag')
    op.drop_index(op.f('ix_tag_software_id'), table_name='tag')
    op.drop_table('tag')
    op.drop_index('idx_entry_software_and_title', table_name='entry')
    op.drop_index(op.f('ix_entry_id'), table_name='entry')
    op.drop_index('idx_entry_software_and_update_at', table_name='entry')
    op.drop_table('entry')
    op.drop_index(op.f('ix_user_reddit_id'), table_name='user')
    op.drop_index(op.f('ix_user_github_id'), table_name='user')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_software_id'), table_name='software')
    op.drop_table('software')
    # ### end Alembic commands ###
